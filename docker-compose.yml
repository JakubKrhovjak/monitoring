version: '3.4'
services:
  prometheus:
    container_name: prometheus
    image: prom/prometheus:v2.39.2
#    network_mode: host
    restart: unless-stopped
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --web.enable-remote-write-receiver
      - --enable-feature=exemplar-storage
    ports:
      - "9090:9090"
    healthcheck:
      interval: 5s
      retries: 10
      test: wget --no-verbose --tries=1 --spider http://localhost:9090/status || exit 1

  loki:
    container_name: loki
    image: grafana/loki
    #    extra_hosts: [ 'host.docker.internal:host-gateway' ]
    command: [ '-config.file=/etc/loki/local-config.yaml' ]
    ports:
      - "3100:3100"
    healthcheck:
      interval: 5s
      retries: 10
      test: wget --no-verbose --tries=1 --spider http://localhost:3100/status || exit 1

  tempo:
    container_name: tempo
    image: grafana/tempo:1.5.0
    command: [ "-search.enabled=true", "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./docker/tempo/tempo-config.yaml/:/etc/tempo.yaml
      - ./docker/tempo/tempo-overrides.yaml:/etc/overrides.yaml
      - ./docker/tempo-data:/tmp/tempo
    ports:
#      - "14250:14250"
#      - "4317:4317"
      - "3200:3200"
      - "4318:4318"
      - "9411:9411" #zipkin
    healthcheck:
      interval: 5s
      retries: 10
      test: wget --no-verbose --tries=1 --spider http://localhost:3200/status || exit 1

#   -------- UI -----------------
  grafana:
    container_name: grafana
    image: grafana/grafana
    restart: unless-stopped
    volumes:
      - ./docker/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources:ro
      - ./docker/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards:ro
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    ports:
      - "3000:3000"
    depends_on:
      tempo:
        condition: service_healthy
      loki:
        condition: service_started
      prometheus:
        condition: service_healthy

  postgres:
    container_name: postgres
    image: bitnami/postgresql:latest
    environment:
      - POSTGRESQL_USERNAME=jakub
      - POSTGRESQL_DATABASE=data_db
      - POSTGRESQL_PASSWORD=pass
    ports:
      - "5432:5432"
    depends_on:
      grafana:
        condition: service_started



