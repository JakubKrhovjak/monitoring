management:
  info:
    env:
      enabled: true
    java:
      enabled: true
    os:
      enabled: true
  tracing:
    sampling:
      probability: 1.0
  endpoint:
    health:
      show-details: always
  endpoints:
    web:
      exposure:
        include: '*'
  metrics:
    tags:
      application: ${spring.application.name}
      profiles: ${spring.profiles.active}





#    distribution:
#      percentiles-histogram:
#        all: true
#        http:
#          server:
#            request: true

#server:
#  tomcat:
#    mbeanregistry:
#      enabled: true



spring:
  application:
    name: customer-service
  output:
    ansi:
      enabled: always
  lifecycle:
    timeout-per-shutdown-phase: 1m

  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    open-in-view: false
    hibernate:
      ddl-auto: update
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/data_db?user=jakub&password=pass
#    username: user
#    password: pass

  flyway:
    url: ${spring.datasource.url}
    enabled: false


logging:
  pattern:
    console: "%clr(%d{HH:mm:ss.SSS}){blue} %clr(%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]){yellow} %clr(:){red} %clr(%m){faint}%n"
    file: "{\"timestamp\":\"%d{HH:mm:ss.SSS}\",\"level\":\"%p\",\"traceId\":\"%X{traceId:-}\",\"spanId\":\"%X{spanId:-}\",\"appName\":\"${spring.application.name}\",\"message\":\"%m\"}%n"
  file:
    path: ${HOME}/monitoring
#
#logging:
#  pattern:
#    console: "%clr(%d{HH:mm:ss.SSS}){blue} %clr(%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]){yellow} %clr(:){red} %clr(%m){faint}%n"
#
#logging:
#  pattern:
#    level: "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"



